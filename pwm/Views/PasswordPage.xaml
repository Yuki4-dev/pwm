<Page
    x:Class="pwm.Views.PasswordPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="using:Microsoft.Xaml.Interactivity"
    xmlns:local="using:pwm.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:pwm.Models.PasswordPage"
    xmlns:ui="using:pwm.UI"
    x:Name="RootPage"
    IsEnabled="{x:Bind ViewModel.IsNotBusy, Mode=OneWay}"
    Loaded="RootPage_Loaded"
    NavigationCacheMode="Enabled"
    mc:Ignorable="d">

    <Page.Resources>
        <XamlUICommand x:Key="ViewCommand" Command="{x:Bind ViewModel.ViewPasswordCommand}" />
        <XamlUICommand x:Key="EditCommand" Command="{x:Bind ViewModel.EditPasswordCommand}" />
        <XamlUICommand x:Key="DeleteCommand" Command="{x:Bind ViewModel.DeletePasswordCommand}" />
        <XamlUICommand x:Key="GoUriCommand" Command="{x:Bind ViewModel.GoUriCommand}" />

        <x:Double x:Key="TitleFontSize">24</x:Double>
        <x:Double x:Key="AutoSuggestBoxWidth">240</x:Double>
        <x:Double x:Key="AutoSuggestFocusBoxWidth">280</x:Double>

        <Thickness x:Key="ContentMargin">8</Thickness>

        <GridLength x:Key="Grid-1">32</GridLength>
        <GridLength x:Key="Grid-2">2*</GridLength>
        <GridLength x:Key="Grid-3">3*</GridLength>
        <GridLength x:Key="Grid-4">2*</GridLength>
        <GridLength x:Key="Grid-5">2*</GridLength>
        <GridLength x:Key="Grid-6">32</GridLength>

        <Style
            x:Key="SortToggleButtonStyle"
            BasedOn="{StaticResource DropDownToggleButtonStyle}"
            TargetType="ToggleButton">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="30" />
            <Setter Property="Height" Value="30" />
            <Setter Property="CornerRadius" Value="4" />
        </Style>

        <Storyboard x:Name="KeyWordSearchAutoSuggestBoxGotFocusAnime">
            <DoubleAnimation
                AutoReverse="False"
                EnableDependentAnimation="True"
                Storyboard.TargetName="KeyWordSearchAutoSuggestBox"
                Storyboard.TargetProperty="Width"
                From="{StaticResource AutoSuggestBoxWidth}"
                To="{StaticResource AutoSuggestFocusBoxWidth}"
                Duration="0:0:0.1" />
        </Storyboard>

        <Storyboard x:Name="KeyWordSearchAutoSuggestBoxLostFocusAnime">
            <DoubleAnimation
                AutoReverse="False"
                EnableDependentAnimation="True"
                Storyboard.TargetName="KeyWordSearchAutoSuggestBox"
                Storyboard.TargetProperty="Width"
                From="{StaticResource AutoSuggestFocusBoxWidth}"
                To="{StaticResource AutoSuggestBoxWidth}"
                Duration="0:0:0.1" />
        </Storyboard>

    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="80" />
            <RowDefinition Height="1" />
            <RowDefinition Height="60" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid.ChildrenTransitions>
            <TransitionCollection>
                <EntranceThemeTransition FromVerticalOffset="50" IsStaggeringEnabled="True" />
            </TransitionCollection>
        </Grid.ChildrenTransitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel>
                <TextBlock FontSize="{StaticResource TitleFontSize}" Text="{x:Bind ViewModel.Strings.Password}" />
                <TextBlock Margin="0,8,0,0">
                    <Run Text="{x:Bind ViewModel.DisplayPasswordCount, Mode=OneWay}" />
                    <Run Text="{x:Bind ViewModel.Strings.Passwords}" />
                </TextBlock>
            </StackPanel>

            <StackPanel
                Grid.Column="1"
                HorizontalAlignment="Right"
                Orientation="Horizontal"
                Spacing="4">

                <AutoSuggestBox
                    x:Name="KeyWordSearchAutoSuggestBox"
                    Width="{StaticResource AutoSuggestBoxWidth}"
                    VerticalAlignment="Center"
                    GotFocus="KeyWordSearchAutoSuggestBox_GotFocus"
                    ItemsSource="{x:Bind ViewModel.SuggestWords}"
                    LostFocus="KeyWordSearchAutoSuggestBox_LostFocus"
                    PlaceholderText="{x:Bind ViewModel.Strings.Search}"
                    QueryIcon="Find"
                    SuggestionChosen="KeyWordSearchAutoSuggestBox_SuggestionChosen"
                    TabIndex="-1"
                    Text="{x:Bind ViewModel.SearchKeyword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                    <i:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="QuerySubmitted">
                            <core:InvokeCommandAction Command="{x:Bind ViewModel.SearchPasswordCommand}" />
                        </core:EventTriggerBehavior>
                    </i:Interaction.Behaviors>
                </AutoSuggestBox>

                <Button>

                    <SymbolIcon Symbol="More" />

                    <Button.Flyout>
                        <MenuFlyout>

                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.SaveCommand}"
                                Icon="Save"
                                Text="{x:Bind ViewModel.Strings.Save}" />

                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.ExportCommand}"
                                Icon="Download"
                                Text="{x:Bind ViewModel.Strings.Export}" />

                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.SettingCommand}"
                                Icon="Setting"
                                Text="{x:Bind ViewModel.Strings.Setting}" />

                            <MenuFlyoutSeparator />

                            <MenuFlyoutItem
                                Command="{x:Bind ViewModel.DeleteSelectionCommand}"
                                Icon="Delete"
                                Text="{x:Bind ViewModel.Strings.DeleteSelection}" />
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </Grid>

        <Border Grid.Row="1" Background="{ThemeResource SystemBaseLowColor}" />

        <Grid Grid.Row="2" Margin="{StaticResource ContentMargin}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource Grid-1}" />
                <ColumnDefinition Width="{StaticResource Grid-2}" />
                <ColumnDefinition Width="{StaticResource Grid-3}" />
                <ColumnDefinition Width="{StaticResource Grid-4}" />
                <ColumnDefinition Width="{StaticResource Grid-5}" />
                <ColumnDefinition Width="{StaticResource Grid-6}" MinWidth="40" />
            </Grid.ColumnDefinitions>

            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="HorizontalTextAlignment" Value="Left" />
                </Style>
            </Grid.Resources>

            <CheckBox Margin="8,0,0,0" IsChecked="{x:Bind ViewModel.IsSelectedAll, Mode=TwoWay}" />

            <StackPanel
                Grid.Column="1"
                Margin="8,0,0,0"
                Orientation="Horizontal"
                Spacing="4">

                <TextBlock Text="{x:Bind ViewModel.Strings.Name}" />

                <ToggleButton IsChecked="{x:Bind ViewModel.CheckedWebSiteName, Mode=TwoWay}" Style="{StaticResource SortToggleButtonStyle}" />
            </StackPanel>

            <StackPanel
                Grid.Column="2"
                Orientation="Horizontal"
                Spacing="4">

                <TextBlock Margin="14,0,0,0" Text="{x:Bind ViewModel.Strings.URL}" />

                <ToggleButton IsChecked="{x:Bind ViewModel.CheckedWebSiteURI, Mode=TwoWay}" Style="{StaticResource SortToggleButtonStyle}" />
            </StackPanel>

            <StackPanel
                Grid.Column="3"
                Orientation="Horizontal"
                Spacing="4">

                <TextBlock Text="{x:Bind ViewModel.Strings.UserId}" />

                <ToggleButton IsChecked="{x:Bind ViewModel.CheckedUserId, Mode=TwoWay}" Style="{StaticResource SortToggleButtonStyle}" />
            </StackPanel>

            <StackPanel
                Grid.Column="4"
                Orientation="Horizontal"
                Spacing="4">

                <TextBlock Text="{x:Bind ViewModel.Strings.Password}" />

                <ToggleButton
                    Background="Transparent"
                    BorderThickness="0"
                    IsChecked="{x:Bind ViewModel.IsDisplayPassword, Mode=TwoWay}"
                    ToolTipService.ToolTip="{x:Bind ViewModel.Strings.VisiblePassword}">

                    <SymbolIcon Width="20" Symbol="View" />
                </ToggleButton>
            </StackPanel>

            <Button
                Grid.Column="5"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Command="{x:Bind ViewModel.AddPasswordCommand}"
                ToolTipService.ToolTip="{x:Bind ViewModel.Strings.AddPassword}">

                <SymbolIcon Symbol="Add" />
            </Button>
        </Grid>

        <ScrollViewer Grid.Row="3">
            <ListView
                Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                ItemsSource="{x:Bind ViewModel.DisplayPasswordInformation, Mode=OneWay}"
                SelectionMode="None">
                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="models:PasswordInformation">

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource Grid-1}" />
                                <ColumnDefinition Width="{StaticResource Grid-2}" />
                                <ColumnDefinition Width="{StaticResource Grid-3}" />
                                <ColumnDefinition Width="{StaticResource Grid-4}" />
                                <ColumnDefinition Width="{StaticResource Grid-5}" />
                                <ColumnDefinition Width="{StaticResource Grid-6}" MinWidth="42" />
                            </Grid.ColumnDefinitions>

                            <Grid.Resources>
                                <Style TargetType="RichTextBlock">
                                    <Setter Property="TextWrapping" Value="NoWrap" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Setter Property="HorizontalTextAlignment" Value="Left" />
                                </Style>
                            </Grid.Resources>

                            <CheckBox VerticalAlignment="Center" IsChecked="{x:Bind IsChecked, Mode=TwoWay}" />

                            <ui:LineTextBlock
                                Grid.Column="1"
                                HighlightLength="{x:Bind WebSiteName.Length, Mode=OneWay}"
                                HighlightStart="{x:Bind WebSiteName.Index, Mode=OneWay}"
                                IsHighlightEnable="{x:Bind WebSiteName.IsHighlightEnable, Mode=OneWay}"
                                Text="{x:Bind WebSiteName.Text, Mode=OneWay}" />

                            <HyperlinkButton
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                Command="{StaticResource GoUriCommand}"
                                CommandParameter="{x:Bind}">

                                <ui:LineTextBlock
                                    HighlightLength="{x:Bind WebSiteURI.Length, Mode=OneWay}"
                                    HighlightStart="{x:Bind WebSiteURI.Index, Mode=OneWay}"
                                    IsHighlightEnable="{x:Bind WebSiteURI.IsHighlightEnable, Mode=OneWay}"
                                    Text="{x:Bind WebSiteURI.Text, Mode=OneWay}" />

                            </HyperlinkButton>

                            <ui:LineTextBlock
                                Grid.Column="3"
                                HighlightLength="{x:Bind UserId.Length, Mode=OneWay}"
                                HighlightStart="{x:Bind UserId.Index, Mode=OneWay}"
                                IsHighlightEnable="{x:Bind UserId.IsHighlightEnable, Mode=OneWay}"
                                Text="{x:Bind UserId.Text, Mode=OneWay}" />

                            <ui:LineTextBlock Grid.Column="4" Text="{x:Bind Password.Text, Mode=OneWay}" />

                            <Button Grid.Column="5">

                                <SymbolIcon Symbol="More" />

                                <Button.Flyout>
                                    <MenuFlyout>

                                        <MenuFlyoutItem
                                            Command="{StaticResource ViewCommand}"
                                            CommandParameter="{x:Bind}"
                                            Icon="PreviewLink"
                                            Text="{StaticResource ManuFlyoutViewText}" />

                                        <MenuFlyoutItem
                                            Command="{StaticResource EditCommand}"
                                            CommandParameter="{x:Bind}"
                                            Icon="Edit"
                                            Text="{StaticResource ManuFlyoutEditText}" />

                                        <MenuFlyoutSeparator />

                                        <MenuFlyoutItem
                                            Command="{StaticResource DeleteCommand}"
                                            CommandParameter="{x:Bind}"
                                            Icon="Delete"
                                            Text="{StaticResource ManuFlyoutDeleteText}" />
                                    </MenuFlyout>
                                </Button.Flyout>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </ScrollViewer>

        <ProgressRing
            Grid.RowSpan="4"
            Width="100"
            Height="100"
            IsActive="{x:Bind ViewModel.IsBusy, Mode=OneWay}" />
    </Grid>
</Page>
