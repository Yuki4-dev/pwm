<!--  https://github.com/veler/DevToys.git  -->
<UserControl
    x:Class="pwm.UI.ExpandableControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="pwm.UI"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="400"
    CornerRadius="4"
    mc:Ignorable="d">

    <UserControl.Resources>
        <Style x:Key="GridSettingBlockStyle" TargetType="Grid">
            <Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
            <Setter Property="BorderThickness" Value="{ThemeResource ExpanderHeaderBorderThickness}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="MinHeight" Value="{StaticResource ExpanderMinHeight}" />
            <Setter Property="Padding" Value="{StaticResource ExpanderContentPadding}" />
        </Style>
        <Style x:Key="TextBlockSettingDescriptionStyle" TargetType="TextBlock">
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Opacity" Value="0.75" />
        </Style>
    </UserControl.Resources>

    <Grid
        x:Name="NonExpanderGrid"
        Background="{ThemeResource ExpanderHeaderBackground}"
        CornerRadius="{x:Bind CornerRadius}"
        Style="{StaticResource GridSettingBlockStyle}">
        <Grid
            x:Name="MainPanel"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Center"
            SizeChanged="MainPanel_SizeChanged">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ContentPresenter
                x:Name="SettingIconElement"
                Width="20"
                Margin="2,0,20,0"
                Content="{x:Bind Icon, Mode=OneWay}" />

            <Grid
                x:Name="DescriptionPanel"
                Grid.Column="1"
                HorizontalAlignment="Left"
                VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock
                    x:Name="TitleBlock"
                    Text="{x:Bind Title, Mode=OneWay}"
                    TextWrapping="Wrap" />

                <TextBlock
                    x:Name="DescriptionBlock"
                    Grid.Row="1"
                    Style="{StaticResource TextBlockSettingDescriptionStyle}"
                    Text="{x:Bind Description, Mode=OneWay}" />
            </Grid>

            <ContentPresenter
                x:Name="ActionableElement"
                Grid.Column="2"
                Margin="24,0,0,0"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Content="{x:Bind SettingActionableElement, Mode=OneWay}" />

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup>
                    <VisualState x:Name="NormalState">
                        <VisualState.Setters>
                            <Setter Target="ActionableElement.(Grid.Row)" Value="0" />
                            <Setter Target="ActionableElement.(Grid.Column)" Value="2" />
                            <Setter Target="ActionableElement.Margin" Value="24,0,0,0" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="CompactState">
                        <VisualState.Setters>
                            <Setter Target="ActionableElement.(Grid.Row)" Value="1" />
                            <Setter Target="ActionableElement.(Grid.Column)" Value="1" />
                            <Setter Target="ActionableElement.Margin" Value="0,4,0,0" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </Grid>
</UserControl>
